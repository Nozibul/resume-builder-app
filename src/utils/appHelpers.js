export const getListOfYears = (startYear = "2000") => {
  var currentYear = new Date().getFullYear();
  const yearList = [];

  for (let i = 0; startYear <= currentYear; i++) {
      let yearValue = startYear++;

      yearList[i] = {
          ...yearList[i],
          name: yearValue.toString(),
      };
  }

  return yearList;
};




export const getListOfMonth = () => {
  const data = [
      {
          value: "Month",
          name: "Month",
          id: "00",
      },
      {
          value: "Jan",
          name: "January",
          id: "01",
      },
      {
          value: "Feb",
          name: "February",
          id: "02",
      },
      {
          value: "Mar",
          name: "March",
          id: "03",
      },
      {
          value: "Apr",
          name: "April",
          id: "04",
      },
      {
          value: "May",
          name: "May",
          id: "05",
      },
      {
          value: "Jun",
          name: "June",
          id: "06",
      },
      {
          value: "Jul",
          name: "July",
          id: "07",
      },
      {
          value: "Aug",
          name: "August",
          id: "08",
      },
      {
          value: "Sep",
          name: "September",
          id: "09",
      },
      {
          value: "Oct",
          name: "October",
          id: "10",
      },
      {
          value: "Nov",
          name: "November",
          id: "11",
      },
      {
          value: "Dec",
          name: "December",
          id: "12",
      },
  ];
  return data;
};





export const getItemFromArray = (rootArray, itemId) =>
  rootArray?.length ? rootArray?.find((i) => i.id == itemId) : null;


  


export const findItemIndexFromArray = (rootArray, itemId) =>
  rootArray?.length ? rootArray?.findIndex((i) => i.id == itemId) : null;


  


// svg d-path
const svgImageDPath = {
  behance: {
      dPath: "M.63.656C1.745.66 2.861.65 3.977.67c.363.007.736.047 1.082.144.707.195 1.197.631 1.305 1.332.108.7-.146 1.285-.802 1.688-.02.011-.032.032-.058.06.723.329 1.084.882 1.119 1.61.048 1.02-.683 1.827-1.854 2.053a5.738 5.738 0 01-1.017.092c-1.041.013-2.083.006-3.124.008v-7zm1.51 2.8c.468 0 .916.003 1.364-.001.232-.003.468.004.695-.034.432-.073.715-.352.718-.667.003-.312-.281-.615-.73-.643C3.51 2.069 2.83 2.1 2.14 2.1v1.356zm-.01 2.796c.653 0 1.276.004 1.898-.004.12-.001.245-.042.36-.081.326-.111.53-.336.523-.589-.01-.307-.21-.495-.494-.614a.73.73 0 00-.262-.07c-.669-.005-1.338-.003-2.025-.003v1.36zM12.627 5.32H8.658c-.132.68.57 1.36 1.36 1.28.276-.028.537-.178.805-.272.066-.024.132-.07.198-.071.475-.006.95-.004 1.478-.004-.09.157-.152.297-.244.416-.507.656-1.236.932-2.067.97a4.313 4.313 0 01-1.162-.103c-1.07-.249-1.734-1.022-1.841-2.105-.065-.658-.014-1.306.312-1.91.493-.914 1.573-1.407 2.752-1.262 1.372.169 2.11.845 2.339 2.14.005.028.026.054.04.082v.84zm-1.51-.941c-.072-.717-.543-1.06-1.368-1.018-.622.031-1.078.465-1.062 1.018h2.43zM11.611 1.58H8.145V.671h3.466v.907z",
      viewBox: "0 0 14 9",
      w: 15,
      h: 14,
  },

  linkedin: {
      dPath: "M1.99291 7.81404H0.388339V2.59717H1.99291V7.81404ZM1.18976 1.88554C0.676672 1.88554 0.260498 1.45647 0.260498 0.938444C0.260498 0.689618 0.358402 0.450983 0.532673 0.275036C0.706944 0.0990899 0.943306 0.000244141 1.18976 0.000244141C1.43622 0.000244141 1.67258 0.0990899 1.84685 0.275036C2.02112 0.450983 2.11903 0.689618 2.11903 0.938444C2.11903 1.45647 1.70268 1.88554 1.18976 1.88554ZM7.99832 7.81404H6.3972V5.2745C6.3972 4.66926 6.38511 3.8931 5.56295 3.8931C4.72871 3.8931 4.60087 4.55066 4.60087 5.23089V7.81404H2.99802V2.59717H4.53694V3.3088H4.5594C4.77362 2.89891 5.29691 2.46635 6.0776 2.46635C7.70152 2.46635 8.00005 3.54601 8.00005 4.94834V7.81404H7.99832Z",
      viewBox: "0 0 9 9",
      w: 9,
      h: 9,
  },

  facebook: {
      dPath: "M8.723 8.375l.444-2.534H6.389V4.197c0-.693.388-1.369 1.632-1.369h1.263V.671S8.138.5 7.042.5C4.754.5 3.258 1.714 3.258 3.91v1.931H.715v2.534h2.543V14.5h3.13V8.375h2.335z",
      viewBox: "0 0 12 15",
      w: 15,
      h: 12,
  },

  github: {
      dPath: "M7 1.167a5.833 5.833 0 100 11.666A5.833 5.833 0 007 1.167zM0 7a7 7 0 1114 0A7 7 0 010 7z M5.594 13.262c-.057-.072-.057-.721 0-1.946-.604.02-.986-.021-1.145-.126-.24-.157-.479-.641-.69-.983-.213-.341-.684-.395-.874-.472-.19-.076-.238-.387.524-.152.762.235.8.876 1.04 1.026.24.15.815.084 1.075-.036s.242-.567.288-.744c.059-.165-.148-.202-.153-.203-.254 0-1.59-.29-1.957-1.585-.367-1.294.105-2.14.358-2.503.168-.242.153-.76-.045-1.55.719-.092 1.273.134 1.664.679 0 .003.511-.305 1.32-.305.808 0 1.095.25 1.316.305.222.053.399-.953 1.766-.679-.286.561-.525 1.262-.342 1.55.182.288.898 1.204.458 2.503-.293.867-.87 1.395-1.729 1.585-.098.031-.148.082-.148.152 0 .105.134.117.326.609.128.328.137 1.264.027 2.81-.277.07-.493.118-.647.142a7.12 7.12 0 01-.862.076 4.91 4.91 0 01-.796-.029 5.773 5.773 0 01-.774-.124z",
      viewBox: "0 0 15 16",
      w: 15,
      h: 12,
  },
  website: {
      dPath: "M9.334 7.8c.052-.429.091-.858.091-1.3 0-.442-.039-.871-.091-1.3h2.197c.104.416.169.851.169 1.3 0 .449-.065.884-.169 1.3m-3.348 3.614c.39-.721.69-1.502.898-2.314h1.917a5.22 5.22 0 01-2.814 2.314zM8.021 7.8H4.979a8.624 8.624 0 01-.104-1.3c0-.442.039-.878.104-1.3h3.042c.058.422.104.858.104 1.3 0 .442-.046.871-.104 1.3zM6.5 11.674A8.816 8.816 0 015.258 9.1h2.484A8.816 8.816 0 016.5 11.674zM3.9 3.9H2.002A5.15 5.15 0 014.81 1.586c-.39.722-.682 1.501-.91 2.314zM2.002 9.1H3.9c.228.813.52 1.593.91 2.314A5.205 5.205 0 012.002 9.1zm-.533-1.3A5.357 5.357 0 011.3 6.5c0-.449.065-.884.169-1.3h2.197c-.052.429-.091.858-.091 1.3 0 .442.039.871.091 1.3M6.5 1.32c.54.78.975 1.65 1.242 2.58H5.258c.267-.93.702-1.8 1.242-2.58zm4.498 2.58H9.081a10.173 10.173 0 00-.897-2.314A5.191 5.191 0 0110.998 3.9zM6.5 0C2.905 0 0 2.925 0 6.5A6.5 6.5 0 106.5 0z",
      viewBox: "0 0 14 14",
      w: 15,
      h: 12,
  },
  link: {
      dPath: "M7.587 11.165a.84.84 0 010 1.19l-.416.415a4.201 4.201 0 01-5.94-5.94l1.688-1.687A4.2 4.2 0 018.68 4.97a.842.842 0 11-1.12 1.26 2.52 2.52 0 00-3.455.102L2.419 8.017a2.52 2.52 0 103.564 3.563l.415-.415a.84.84 0 011.189 0zm5.185-9.937a4.206 4.206 0 00-5.941 0l-.416.416a.841.841 0 101.19 1.19l.416-.416a2.52 2.52 0 013.564 3.563L9.897 7.669a2.52 2.52 0 01-3.456.1.843.843 0 00-1.12 1.26 4.2 4.2 0 005.76-.17L12.77 7.17a4.204 4.204 0 00.002-5.942z",
      viewBox: "0 0 14 16",
      w: 15,
      h: 12,
  },
  instagram: {
      dPath: "M5.48 2h5.04C12.44 2 14 3.56 14 5.48v5.04A3.48 3.48 0 0110.52 14H5.48C3.56 14 2 12.44 2 10.52V5.48A3.48 3.48 0 015.48 2zm-.12 1.2A2.16 2.16 0 003.2 5.36v5.28c0 1.194.966 2.16 2.16 2.16h5.28a2.16 2.16 0 002.16-2.16V5.36c0-1.194-.966-2.16-2.16-2.16H5.36zm5.79.9a.75.75 0 110 1.5.75.75 0 010-1.5zM8 5a3 3 0 110 6 3 3 0 010-6zm0 1.2a1.8 1.8 0 100 3.6 1.8 1.8 0 000-3.6z",
      viewBox: "0 0 15 16",
      w: 15,
      h: 12,
  },
  youtube: {
      dPath: "M8 3c.513 0 1.04.014 1.55.036l.602.03.576.036.54.038.493.04c.536.043 1.04.28 1.423.672.383.391.622.91.674 1.467l.024.266.045.569C13.969 6.744 14 7.386 14 8c0 .614-.031 1.257-.073 1.846l-.045.569-.024.266a2.417 2.417 0 01-.675 1.467c-.383.392-.887.63-1.422.672l-.492.04-.54.038-.577.036-.603.03c-.516.023-1.032.035-1.549.036-.517 0-1.033-.013-1.55-.036l-.602-.03-.576-.036-.54-.039-.493-.039a2.242 2.242 0 01-1.423-.672 2.417 2.417 0 01-.674-1.467l-.024-.266-.045-.569C2.027 9.232 2.003 8.616 2 8c0-.614.031-1.257.073-1.846l.045-.569.024-.266c.052-.556.29-1.076.674-1.467.383-.391.887-.63 1.422-.672l.493-.04.54-.038.577-.036.602-.03A35.536 35.536 0 018 3zm0 1.25c-.495 0-1.004.014-1.5.035l-.587.03-.563.034-.53.037-.484.04a1.062 1.062 0 00-.678.316 1.146 1.146 0 00-.322.698C3.266 6.196 3.2 7.136 3.2 8c0 .864.066 1.804.136 2.56.051.545.466.969 1 1.014l.485.04.529.037.563.035.587.029c.496.021 1.005.035 1.5.035.495 0 1.004-.014 1.5-.035l.587-.03.563-.034.53-.037.484-.04c.255-.018.495-.13.678-.316.183-.186.297-.433.322-.698.07-.756.136-1.696.136-2.56 0-.864-.066-1.804-.136-2.56a1.145 1.145 0 00-.322-.698 1.062 1.062 0 00-.678-.316l-.485-.04-.529-.037-.563-.035-.587-.029c-.5-.022-1-.034-1.5-.035zM6.8 6.484a.388.388 0 01.157-.31.351.351 0 01.334-.039l.049.025 2.52 1.515c.05.03.093.072.124.123a.385.385 0 01-.073.49l-.051.037-2.52 1.516a.35.35 0 01-.47-.102.384.384 0 01-.066-.167L6.8 9.516V6.484z",
      viewBox: "0 0 14 15",
      w: 15,
      h: 12,
  },
  tiktok: {
      dPath: "M10.944 5.747v4.354c0 .81-.257 1.6-.735 2.26a3.966 3.966 0 01-1.933 1.423 4.042 4.042 0 01-2.416.06 3.976 3.976 0 01-2.004-1.326 3.847 3.847 0 01-.233-4.515 3.956 3.956 0 011.856-1.518 4.04 4.04 0 012.41-.18v1.898a2.175 2.175 0 00-1.345-.16 2.148 2.148 0 00-1.173.665 2.07 2.07 0 00-.207 2.515c.248.384.616.68 1.05.84.433.162.908.181 1.353.054a2.14 2.14 0 001.115-.755c.278-.364.429-.806.43-1.261V2h1.832c0 .796.322 1.559.895 2.121.573.563 1.35.88 2.161.88v1.8a4.925 4.925 0 01-3.056-1.054z",
      viewBox: "0 0 15 15",
      w: 15,
      h: 12,
  },
  twitter: {
      dPath: "M9.104 1.125h1.654l-3.613 4.13 4.25 5.62H8.068L5.46 7.466l-2.983 3.409H.822l3.865-4.418L.609 1.125h3.413L6.378 4.24l2.725-3.115h.001zm-.58 8.76h.916L3.524 2.063h-.983l5.983 7.822z",
      viewBox: "0 0 12 12",
      w: 15,
      h: 12,
  },
  reddit: {
      dPath: "M14 6.8c0-.333-.09-.66-.26-.944a1.765 1.765 0 00-.698-.663 1.696 1.696 0 00-1.82.16 6.875 6.875 0 00-2.545-.722l.184-1.14.76.13c.089.247.255.457.472.597a1.133 1.133 0 001.408-.14 1.234 1.234 0 00.233-1.441 1.178 1.178 0 00-.544-.53 1.128 1.128 0 00-.744-.076c-.249.06-.472.202-.635.406l-1.33-.23a.563.563 0 00-.434.103.592.592 0 00-.236.39l-.309 1.915c-.983.066-1.926.32-2.73.738a1.702 1.702 0 00-2.334.26c-.288.335-.444.77-.438 1.219.006.448.175.878.472 1.205-.06.25-.091.506-.091.763 0 1.164.612 2.243 1.725 3.039C5.153 12.587 6.535 13 7.996 13c1.463 0 2.845-.412 3.892-1.161 1.112-.796 1.725-1.875 1.725-3.04 0-.256-.03-.512-.091-.762A1.84 1.84 0 0014 6.8zm-1.448.517a.597.597 0 00-.258.328.619.619 0 00.016.422c.091.233.14.482.14.733 0 .759-.435 1.487-1.224 2.052-.855.611-2.001.948-3.23.948-1.227 0-2.371-.337-3.229-.948C3.98 10.287 3.543 9.56 3.543 8.8c0-.25.047-.5.137-.732a.618.618 0 00.017-.421.597.597 0 00-.255-.33.59.59 0 01-.282-.426.619.619 0 01.145-.495.581.581 0 01.463-.195.567.567 0 01.439.249.565.565 0 00.772.159l.01-.007c.826-.518 1.894-.802 3.008-.802 1.113 0 2.178.284 3.006.8l.01.006a.566.566 0 00.774-.156.56.56 0 01.823-.127c.101.08.174.192.208.319a.619.619 0 01-.023.384.595.595 0 01-.243.29zM6.06 9a.947.947 0 01-.538-.169.994.994 0 01-.356-.448 1.03 1.03 0 01.21-1.09.94.94 0 011.055-.217.976.976 0 01.434.368 1.024 1.024 0 01-.12 1.263A.953.953 0 016.06 9zm4.842-1c0 .198-.057.391-.164.555a.976.976 0 01-.434.369.94.94 0 01-1.055-.217 1.03 1.03 0 01-.21-1.09.994.994 0 01.356-.449.947.947 0 011.223.125c.182.187.284.442.284.707zm-.994 2.026a.619.619 0 01-.187.64.574.574 0 01-.2.11 5.25 5.25 0 01-3.05 0 .587.587 0 01-.344-.292.619.619 0 01-.043-.458.597.597 0 01.282-.355.565.565 0 01.444-.045 4.136 4.136 0 002.372 0 .563.563 0 01.62.193.607.607 0 01.106.207z",
      viewBox: "0 0 14 14",
      w: 15,
      h: 12,
  },
  pinterest: {
      dPath: "M8 2a6 6 0 100 12A6 6 0 008 2zM3.2 8a4.8 4.8 0 113.646 4.66l.431-2.024c.412.357.924.494 1.415.485a3.039 3.039 0 001.533-.477c.452-.284.855-.696 1.076-1.205A3.6 3.6 0 104.7 9.44a.6.6 0 101.1-.48A2.4 2.4 0 1110.4 8c0 .657-.246 1.27-.814 1.628a1.827 1.827 0 01-.916.293c-.286.006-.505-.08-.657-.24-.149-.156-.312-.457-.312-1.021 0-.36.137-.66.301-1.435a.6.6 0 10-1.173-.25l-1.116 5.246A4.799 4.799 0 013.2 8z",
      viewBox: "0 0 16 16",
      w: 15,
      h: 12,
  },
  artstation: {
      dPath: "M2 10.711l1.015 1.656c.2.377.61.633 1.073.633h6.721l-1.384-2.289H2zm12 .011c0-.222-.07-.439-.194-.622L9.86 3.611a1.161 1.161 0 00-.443-.448A1.247 1.247 0 008.792 3H6.71l6.088 10 .961-1.589c.182-.3.241-.433.241-.689zM8.428 9.078L5.713 4.622 2.985 9.078h5.443z",
      viewBox: "0 0 14 14",
      w: 15,
      h: 12,
  },
  dribble: {
      dPath: "M8 0a8 8 0 100 16A8 8 0 008 0zm5.38 3.9a6.732 6.732 0 011.385 3.957c-1.378-.26-2.972-.388-4.663-.047a30.387 30.387 0 00-.642-1.399c1.99-.832 3.257-1.864 3.92-2.512zm-.837-.914c-.575.557-1.76 1.525-3.663 2.308a31.398 31.398 0 00-2.48-3.87 6.743 6.743 0 016.143 1.563zM5.177 1.85a30.08 30.08 0 012.532 3.866c-1.66.524-3.745.873-6.308.784a6.793 6.793 0 013.776-4.65zM1.23 8c0-.092.003-.184.007-.276.342.014.68.024 1.006.024 2.434 0 4.436-.376 6.057-.907.213.427.411.858.6 1.29-1.927.646-3.941 1.973-5.876 4.453A6.743 6.743 0 011.23 8zm2.708 5.412c1.803-2.336 3.651-3.568 5.433-4.146.645 1.665 1.105 3.333 1.349 4.93A6.731 6.731 0 018 14.77a6.734 6.734 0 01-4.06-1.357zm7.927.14a25.145 25.145 0 00-1.29-4.584c1.452-.253 2.842-.126 4.104.126a6.777 6.777 0 01-2.814 4.458z",
      viewBox: "0 0 16 16",
      w: 15,
      h: 12,
  },
  toptal: {
      dPath: "M9.996 5.856L3.9 0 2.66 1.19l2.292 2.199L0 8.145 6.097 14l1.238-1.19-2.29-2.2L10 5.857h-.004zM2.754 8.323l3.683-3.537.743.713-3.682 3.566-.743-.735-.001-.007z",
      viewBox: "0 0 10 14",
      w: 15,
      h: 12,
  },
  fiverr: {
      dPath: "M9 14.4A5.4 5.4 0 109 3.6a5.4 5.4 0 000 10.8zm0 1.35a6.75 6.75 0 110-13.5 6.75 6.75 0 010 13.5zm2.312-4.625V7.75H7.937v-.21c0-.35.283-.634.633-.634h.632V5.641H8.57a1.9 1.9 0 00-1.9 1.898v.21h-.843v1.267h.844v2.109h-.844v1.265H8.78v-1.265h-.843v-2.11h2.121v2.11h-.856v1.265h2.953v-1.265h-.843zm-.691-4.169a.676.676 0 100-1.351.676.676 0 000 1.351z",
      viewBox: "0 0 16 16",
      w: 15,
      h: 12,
  },
  others: {
      dPath: "M12.775 7.184H9.5a.956.956 0 01-.954-.955V2.956A.956.956 0 019.5 2h3.274a.956.956 0 01.954.955v3.273a.956.956 0 01-.954.955zM9.5 2.819a.136.136 0 00-.136.137v3.273a.136.136 0 00.136.136h3.274a.136.136 0 00.136-.136V2.956a.136.136 0 00-.136-.137H9.5zm1.637 11.182a.952.952 0 01-.675-.28l-1.907-1.907a.956.956 0 010-1.35l1.907-1.907a.955.955 0 011.35 0l1.907 1.907a.955.955 0 010 1.35l-1.907 1.907a.952.952 0 01-.675.28zm0-4.906a.136.136 0 00-.097.04l-1.907 1.908a.137.137 0 00-.03.148.136.136 0 00.03.045l1.907 1.907a.138.138 0 00.097.04.136.136 0 00.097-.04l1.907-1.907a.137.137 0 000-.194l-1.907-1.907a.136.136 0 00-.097-.04zm-4.91-1.911H2.955A.956.956 0 012 6.229V2.956A.956.956 0 012.955 2h3.273a.956.956 0 01.955.955v3.273a.956.956 0 01-.955.955zM2.955 2.819a.136.136 0 00-.137.137v3.273a.136.136 0 00.137.136h3.273a.136.136 0 00.136-.136V2.956a.136.136 0 00-.136-.137H2.955zM6.228 13.73H2.955A.956.956 0 012 12.776V9.502a.956.956 0 01.955-.954h3.273a.956.956 0 01.955.954v3.274a.956.956 0 01-.955.954zM2.955 9.366a.136.136 0 00-.137.136v3.274a.136.136 0 00.137.136h3.273a.136.136 0 00.136-.136V9.502a.136.136 0 00-.136-.136H2.955z",
      viewBox: "0 0 16 16",
      w: 15,
      h: 12,
  },
};

export const getSocialMediaLinkWithIcon = (array) => {
  // make an copy of root-array
  const copyData = JSON.parse(JSON.stringify(array));

  for (let i = 0; i < copyData?.length; i++) {
      const found = Object.entries(svgImageDPath).find((pair) =>
          pair[0].includes(copyData[i].websiteName?.toLowerCase())
      );

      if (found) {
          copyData[i].socialIcon = found[1];
      } else copyData[i].socialIcon = svgImageDPath.website;
  }
  return copyData;
};





export const isValidUrl = (urlString) => {
  try {
      return Boolean(new URL(urlString));
  } catch (e) {
      return false;
  }
};




export const generateUUID = () => {
  // Public Domain/MIT
  let d = new Date().getTime(); //Timestamp
  let d2 = (typeof performance !== "undefined" && performance.now && performance.now() * 1000) || 0; //Time in microseconds since page-load or 0 if unsupported
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, function (c) {
      let r = Math.random() * 16; //random number between 0 and 16
      if (d > 0) {
          //Use timestamp until depleted
          r = (d + r) % 16 | 0;
          d = Math.floor(d / 16);
      } else {
          //Use microseconds since page-load if supported
          r = (d2 + r) % 16 | 0;
          d2 = Math.floor(d2 / 16);
      }
      return (c === "x" ? r : (r & 0x3) | 0x8).toString(16);
  });
};





import Cookies from "cookies-js";

export const redirectUserWithURL = (url) => Cookies.set("redirect_url", url);





export const chunkSubstr = (str, size) => {
  const numChunks = Math.ceil(str.length / size);
  const chunks = new Array(numChunks);

  for (let i = 0, o = 0; i < numChunks; ++i, o += size) {
      chunks[i] = str.substr(o, size);
  }

  return chunks;
};

// CHECK REGEX OF PHONE NUMBER
export const phoneRegExp = /^[0-9 ()+-]+$/;
// CHECK VALID URL
// export const validURLRegex =
//     /^((ftp|http|https):\/\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\.[a-zA-Z]+)+((\/)[\w#]+)*(\/\w+\?[a-zA-Z0-9_]+=\w+(&[a-zA-Z0-9_]+=\w+)*)?$/gm;
export const validURLRegex = /[-a-zA-Z0-9@:%_\+.~#?&//=]{2,256}\.[a-z]{2,4}\b(\/[-a-zA-Z0-9@:%_\+.~#?&//=]*)?/gi;

// CHECK IMAGE VALID of extension
export const validFileExtensions = ["image/jpg", "image/png", "image/jpeg"];

// Open sans font
import { Open_Sans, Rubik } from "@next/font/google";

export const openSans = Open_Sans({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700", "800"],
});

export const rubik = Rubik({
  subsets: ["latin"],
  weight: ["400", "500", "600", "700", "800"],
});

// scroll to top position
export const scrollToTopMethod = () => {
  if (typeof window !== undefined) {
      return window.scrollTo(0, 0);
  }
};

// set expires cookies date
export const expiredCookiesDate = (days) => {
  const d = new Date();
  d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);
  let expires = "expires=" + d.toUTCString();

  return expires;
};
